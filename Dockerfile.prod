FROM node:18-bookworm-slim AS deps
WORKDIR /app

# для нативных модулей (sharp и т.п.)
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3 make g++ && rm -rf /var/lib/apt/lists/*

# Yarn 4 через Corepack
RUN corepack enable && corepack prepare yarn@4.9.4 --activate

# чтобы Yarn создавал node_modules (а не PnP)
RUN printf 'nodeLinker: node-modules\n' > .yarnrc.yml

# кэш зависимостей
ENV YARN_CACHE_FOLDER=/usr/local/.yarn-cache

# ставим только манифесты — для кеша слоёв
COPY package.json yarn.lock ./
RUN yarn install --immutable

# ===== build =====
FROM node:18-bookworm-slim AS builder
WORKDIR /app
RUN corepack enable && corepack prepare yarn@4.9.4 --activate
COPY . .
COPY --from=deps /app/node_modules ./node_modules

# если есть next.config.ts — транслируем через tsx без установки в devDeps
RUN test -f next.config.ts && yarn dlx tsx ./next.config.ts > next.config.mjs || true

RUN yarn build

# ===== runtime =====
FROM node:18-bookworm-slim AS runner
ENV NODE_ENV=production
ENV PORT=3042
WORKDIR /app

COPY --from=builder /app/.next ./.next
COPY --from=builder /app/public ./public
COPY --from=builder /app/next.config.mjs ./next.config.mjs
COPY --from=builder /app/package.json ./package.json
COPY --from=deps    /app/node_modules ./node_modules

EXPOSE 3042
CMD ["yarn","start"]